{"version":3,"sources":["reportWebVitals.js","twitter-brands.svg","yin-yang-solid.svg","colors.js","quotes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","colors","Quote","props","state","quote","author","color","random","bind","randNum","Math","floor","data","quotes","length","colorNum","setTimeout","setState","$","css","this","className","id","href","target","src","Twitter","alt","onClick","YinYang","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oDCPC,G,MAAA,IAA0B,4CCA1B,MAA0B,2C,OCkBxBQ,EAlBJ,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,OC4DWC,E,kDA9DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAEX,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAPC,E,0CAUnB,WAAU,IAAD,OAEDC,EAAUC,KAAKC,MAAMD,KAAKH,SAAWK,EAAKC,OAAOC,QACjDC,EAAWL,KAAKC,MAAMD,KAAKH,SAAWP,EAAOc,QAGjDE,YAAW,WACP,EAAKC,SAAS,CACVb,MAAOQ,EAAKC,OAAOJ,GAASL,MAC5BC,OAAQO,EAAKC,OAAOJ,GAASJ,OAC7BC,MAAON,EAAOe,OAEnB,KAGHG,IAAE,sBAAsBC,IAAI,mBAAoBC,KAAKjB,MAAMG,OAC3DY,IAAE,QAAQC,IAAI,QAASC,KAAKjB,MAAMG,S,+BAItC,WACIc,KAAKb,W,oBAGT,WACI,OACI,qBAAKc,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,sBAAKC,GAAG,YAAYD,UAAU,MAA9B,UACI,sBAAKA,UAAU,WAAf,UACI,oBAAIC,GAAG,OAAOD,UAAU,OAAxB,SAAgCD,KAAKjB,MAAMC,QAC3C,oBAAIkB,GAAG,SAASD,UAAU,SAA1B,SAAoCD,KAAKjB,MAAME,YAEnD,sBAAKgB,UAAU,aAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,mBAAGC,GAAG,cAAcC,KAAK,2BAA2BC,OAAO,SAA3D,SACI,qBAAKC,IAAKC,EAASL,UAAU,OAAOM,IAAI,qBAGhD,qBAAKN,UAAU,eAAf,SACI,wBAAQO,QAASR,KAAKb,OAAQe,GAAG,YAAYD,UAAU,YAAvD,SACI,qBAAKI,IAAKI,EAASR,UAAU,OAAOM,IAAI,oC,GApDxDG,IAAMC,WCJ1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7C,K","file":"static/js/main.2f530146.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/twitter-brands.7e1d72c3.svg\";","export default __webpack_public_path__ + \"static/media/yin-yang-solid.2aff411e.svg\";","let colors = [\n    '#16a085',\n    '#27ae60',\n    '#2c3e50',\n    '#f39c12',\n    '#e74c3c',\n    '#9b59b6',\n    '#FB6964',\n    '#342224',\n    '#472E32',\n    '#BDBB99',\n    '#77B1A9',\n    '#73A857',\n    '#2667f2',\n    '#a4f226',\n    '#f2a126'\n  ];\n\n  export default colors","import React from 'react';\nimport $ from 'jquery';\nimport './App.css';\n\nimport Twitter from './twitter-brands.svg';\nimport YinYang from './yin-yang-solid.svg';\n\nimport data from './data.json';\nimport colors from './colors.js';\n\n\n\nclass Quote extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            quote: '',\n            author: '',\n            color: ''\n        }\n        this.random = this.random.bind(this)\n    }\n\n    random() {\n        // Random Numbers\n        let randNum = Math.floor(Math.random() * data.quotes.length)\n        let colorNum = Math.floor(Math.random() * colors.length)\n\n        // Change Values\n        setTimeout(() => {\n            this.setState({\n                quote: data.quotes[randNum].quote,\n                author: data.quotes[randNum].author,\n                color: colors[colorNum]\n            })\n        }, 300)\n\n        // Change Color\n        $('.App-header, .icon').css('background-color', this.state.color)\n        $('.box').css('color', this.state.color)\n    }\n\n    // Launch On Load\n    componentDidMount() {\n        this.random()\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <div id=\"quote-box\" className=\"box\">\n                        <div className=\"text-box\">\n                            <h2 id=\"text\" className=\"text\">{this.state.quote}</h2>\n                            <h3 id=\"author\" className=\"author\">{this.state.author}</h3>\n                        </div>\n                        <div className=\"button-box\">\n                            <div className=\"twitter-button\">\n                                <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" target=\"_blank\">\n                                    <img src={Twitter} className=\"icon\" alt=\"Twitter Icon\" />\n                                </a>\n                            </div>\n                            <div className=\"quote-button\">\n                                <button onClick={this.random} id=\"new-quote\" className=\"new-quote\">\n                                    <img src={YinYang} className=\"icon\" alt=\"Yin Yang Icon\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Quote","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Quotes from './quotes.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Quotes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}